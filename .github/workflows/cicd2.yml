name: Python API CI/CD

on:
  workflow_dispatch:

env:
  IMAGE_NAME: python-api
  EKS_CLUSTER_NAME: eks-blabla
  K8S_NAMESPACE: apis
  K8S_DIR: 'app/k8s/'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip
        sudo pip3 install awscli

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/github-actions-oidc-role
        aws-region: ${{ env.aws_region }}

    - name: Setup Python environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install -r requirements.txt

    # - name: Run tests
    #   run: pytest tests/

    - name: Build and push Docker image
      id: build-image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # - name: Checkout code
    #   uses: actions/checkout@v2

    # - name: Update Kubernetes deployment
    #   uses: steebchen/kubectl-action@v2
    #   with:
    #     kubeconfig: ${{ secrets.KUBECONFIG }}
    #     namespace: ${{ env.K8S_NAMESPACE }}
    #     command: apply
    #     filename: deployment.yaml

    - name: Authenticate with EKS
      id: eks_auth
      run: |
        aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }}

    - name: Deploy to EKS
      env:
        KUBECONFIG: /github/workspace/kubeconfig.yaml
      working-directory: ${{ env.K8S_DIR }}
      run: |
        kubectl apply -f namespaces.yaml
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
