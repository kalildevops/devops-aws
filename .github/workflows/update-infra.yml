name: AWS Create/Update infra

on:
  workflow_dispatch:
    inputs:
      terragrunt-choice:
        type: choice
        description: Select if you want to create or destroy infrastructure
        options:
        - create
        - destroy
      resource-choice:
        type: choice
        description: Select AWS resource
        options:
        - s3
        - sns
        - all
    secrets:
      aws_account:
        required: true

env:
  tf_version: '1.2.7'
  tg_version: '0.38.9'
  tg_working_dir: 'iac/terragrunt/aws-default-account/dev/us-east-1/'
  env: 'dev'
  aws_region: 'us-east-1'

permissions:
      id-token: write
      contents: read

jobs:
  update-infra:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          terraform_version: ${{ env.tf_version }}

      - name: 'Setup Terragrunt'
        uses: eLco/setup-terragrunt@v1
        with:
          terragrunt_version: ${{ env.tg_version }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/github-actions-oidc-role
          aws-region: ${{ env.aws_region }}

      - name: 'terragrunt run-all'
        # if: ${{ inputs.resource-choice }} == "all" && ${{ inputs.terragrunt-choice }} == "create"
        # if: ${{ inputs.resource-choice }} == 'all'
        if: inputs.resource-choice == 'all' && inputs.terragrunt-choice == 'create'
        working-directory: ${{ env.tg_working_dir }}
        run: |
          terragrunt run-all apply --terragrunt-non-interactive

      - name: 'terragrunt destroy-all'
        if: inputs.resource-choice == 'all' && inputs.terragrunt-choice == 'destroy'
        working-directory: ${{ env.tg_working_dir }}
        run: |
          terragrunt destroy-all

      - name: 'Create/Update ${{ inputs.resource-choice }} resources'
        if: inputs.resource-choice != 'all' && inputs.terragrunt-choice == 'create'
        working-directory: ${{ env.tg_working_dir }}
        run: |
          terragrunt apply -auto-approve --terragrunt-working-dir ${{ inputs.resource-choice }}
